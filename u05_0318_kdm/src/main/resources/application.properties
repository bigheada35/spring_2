#server port number
server.port = 8282

#datasource (oracle)
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xe
spring.datasource.username=kbat2
spring.datasource.password=kbat

spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@146.56.137.240:1521/xe
#spring.datasource.username=study_about
#spring.datasource.password=kbat


#xml location
mybatis.mapper-locations=classpath:mappers/**/*.xml

#static resource 
spring.mvc.static-path-pattern=/resources/**

#### jsp 
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#GOOGLE
spring.security.oauth2.client.registration.google.client-id=154459992673-qthuklursfp8jv21qtsa14e8vhm9752u.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email, profile

#KAKAO Login
#rest api -> id에 해당 rest 방식으로 oauth2 인증
spring.security.oauth2.client.registration.kakao.client-id=92990b21e0832fb0f15d3902b0a14288
#kakao developers 에서 내 애플리케이션>제품 설정>카카오 로그인> 보안 카테고리에서 발급, 활성화상태 -> 활성화로 변경

spring.security.oauth2.client.registration.kakao.client-secret=hvZzUgM4a7g6IVTbY2hjln6ROLmPFLmC
#oauth2 클라이언트 라이브러리 사용시 주소 형식 고정. 앞 localhost:8282인 domain만 수정가능 /login/oauth2/code/kakao -> 고정
#내 애플리케이션>제품 설정> 카카오로그인 카테고리에서 리다이렉트 url설정
#내 애플리케이션>앱 설정> 플랫폼 에서 web으로 등록, 사이트 도메인 설정 ->    http://localhost:8282

spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8282/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
#스코프는 카카오 문서를 따라야함
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

#KAKAO Provider
spring.security.oauth2.client.provider.kakao.authorization-uri= https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


# naver
spring.security.oauth2.client.registration.naver.client-id=tEXFNrOK22xW0llBDyAd
spring.security.oauth2.client.registration.naver.client-secret=ls8lj_g6qg
#리다이렉트 주소
#oauth2 클라이언트 라이브러리 사용시 주소 형식 고정. 앞 localhost:8282인 domain만 수정가능 /login/oauth2/code/naver->고정
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8282/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#가져올 데이터, 이름은 네이버 문서 참조
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=naver
#NAVER Provider #구글,트위터, 페이스북은 프로바이더를 등록해주지만 naver, kakao등 국내 소셜은 직접 등록해야한다.
#이주소를 요청하면 네이버가 뜬다.
# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#토큰을 받는 주소
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
#유저의 프로필을 받으려면 이 주소를 호출 
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
#응답을 받으면 모든 정보들이 response에 들어가 있다. , 회원 정보를 json으로 받는데 response라는 키 값으로 네이버가 리턴
spring.security.oauth2.client.provider.naver.user-name-attribute=response





#Thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.view-names=thymeleaf/*
#file upload
spring.servlet.multipart.max-file-size=60MB
spring.servlet.multipart.max-request-size=60MB

#resource upload path
uploadPath=file:///C:/upload-dir2/
#이메일 인증 관련

#gmail smtp를 사용하기 위한 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=daeminkim321@gmail.com
spring.mail.password=rlaeoals07
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true



#커스텀 에러 페이지 관련

#기존spring 에서 보여주던 에러페이지를 false로 전환 true면 spring의 에러페이지를 보여준다.
server.error.whitelabel.enabled= false
#에러가 발생했을때 처리해줄 컨트롤러 주소
server.error.path= /errorPage
